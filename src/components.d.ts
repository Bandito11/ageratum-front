/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import {
  MatchResults,
} from '@stencil/router';

declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  AppProfile as AppProfile
} from './components/app-profile/app-profile';

declare global {
  interface HTMLAppProfileElement extends AppProfile, HTMLStencilElement {
  }
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-profile": JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      match?: MatchResults;
    }
  }
}


import {
  BlogPage as BlogPage
} from './components/blog-page/blog-page';

declare global {
  interface HTMLBlogPageElement extends BlogPage, HTMLStencilElement {
  }
  var HTMLBlogPageElement: {
    prototype: HTMLBlogPageElement;
    new (): HTMLBlogPageElement;
  };
  interface HTMLElementTagNameMap {
    "blog-page": HTMLBlogPageElement;
  }
  interface ElementTagNameMap {
    "blog-page": HTMLBlogPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "blog-page": JSXElements.BlogPageAttributes;
    }
  }
  namespace JSXElements {
    export interface BlogPageAttributes extends HTMLAttributes {
      id?: string;
    }
  }
}


import {
  HomePage as HomePage
} from './components/home-page/home-page';

declare global {
  interface HTMLHomePageElement extends HomePage, HTMLStencilElement {
  }
  var HTMLHomePageElement: {
    prototype: HTMLHomePageElement;
    new (): HTMLHomePageElement;
  };
  interface HTMLElementTagNameMap {
    "home-page": HTMLHomePageElement;
  }
  interface ElementTagNameMap {
    "home-page": HTMLHomePageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "home-page": JSXElements.HomePageAttributes;
    }
  }
  namespace JSXElements {
    export interface HomePageAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  MyApp as MyApp
} from './components/my-app/my-app';

declare global {
  interface HTMLMyAppElement extends MyApp, HTMLStencilElement {
  }
  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-app": JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TableOfContents as TableOfContents
} from './components/table-of-contents/table-of-contents';

declare global {
  interface HTMLTableOfContentsElement extends TableOfContents, HTMLStencilElement {
  }
  var HTMLTableOfContentsElement: {
    prototype: HTMLTableOfContentsElement;
    new (): HTMLTableOfContentsElement;
  };
  interface HTMLElementTagNameMap {
    "table-of-contents": HTMLTableOfContentsElement;
  }
  interface ElementTagNameMap {
    "table-of-contents": HTMLTableOfContentsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "table-of-contents": JSXElements.TableOfContentsAttributes;
    }
  }
  namespace JSXElements {
    export interface TableOfContentsAttributes extends HTMLAttributes {
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
